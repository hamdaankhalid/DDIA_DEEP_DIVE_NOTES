# Generated from ./SQL_SUBSET.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,15,96,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,
        7,13,2,14,7,14,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,
        5,1,6,1,6,1,6,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,1,8,1,8,1,9,1,9,1,
        9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,11,1,11,5,11,71,8,11,10,
        11,12,11,74,9,11,1,12,4,12,77,8,12,11,12,12,12,78,1,13,1,13,5,13,
        83,8,13,10,13,12,13,86,9,13,1,13,1,13,1,14,4,14,91,8,14,11,14,12,
        14,92,1,14,1,14,1,84,0,15,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,
        9,19,10,21,11,23,12,25,13,27,14,29,15,1,0,4,3,0,65,90,95,95,97,122,
        4,0,48,57,65,90,95,95,97,122,1,0,48,57,3,0,9,10,13,13,32,32,99,0,
        1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,
        0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,
        0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,1,31,1,
        0,0,0,3,33,1,0,0,0,5,35,1,0,0,0,7,37,1,0,0,0,9,39,1,0,0,0,11,41,
        1,0,0,0,13,44,1,0,0,0,15,47,1,0,0,0,17,50,1,0,0,0,19,57,1,0,0,0,
        21,62,1,0,0,0,23,68,1,0,0,0,25,76,1,0,0,0,27,80,1,0,0,0,29,90,1,
        0,0,0,31,32,5,42,0,0,32,2,1,0,0,0,33,34,5,44,0,0,34,4,1,0,0,0,35,
        36,5,61,0,0,36,6,1,0,0,0,37,38,5,62,0,0,38,8,1,0,0,0,39,40,5,60,
        0,0,40,10,1,0,0,0,41,42,5,62,0,0,42,43,5,61,0,0,43,12,1,0,0,0,44,
        45,5,60,0,0,45,46,5,61,0,0,46,14,1,0,0,0,47,48,5,60,0,0,48,49,5,
        62,0,0,49,16,1,0,0,0,50,51,5,83,0,0,51,52,5,69,0,0,52,53,5,76,0,
        0,53,54,5,69,0,0,54,55,5,67,0,0,55,56,5,84,0,0,56,18,1,0,0,0,57,
        58,5,70,0,0,58,59,5,82,0,0,59,60,5,79,0,0,60,61,5,77,0,0,61,20,1,
        0,0,0,62,63,5,87,0,0,63,64,5,72,0,0,64,65,5,69,0,0,65,66,5,82,0,
        0,66,67,5,69,0,0,67,22,1,0,0,0,68,72,7,0,0,0,69,71,7,1,0,0,70,69,
        1,0,0,0,71,74,1,0,0,0,72,70,1,0,0,0,72,73,1,0,0,0,73,24,1,0,0,0,
        74,72,1,0,0,0,75,77,7,2,0,0,76,75,1,0,0,0,77,78,1,0,0,0,78,76,1,
        0,0,0,78,79,1,0,0,0,79,26,1,0,0,0,80,84,5,39,0,0,81,83,9,0,0,0,82,
        81,1,0,0,0,83,86,1,0,0,0,84,85,1,0,0,0,84,82,1,0,0,0,85,87,1,0,0,
        0,86,84,1,0,0,0,87,88,5,39,0,0,88,28,1,0,0,0,89,91,7,3,0,0,90,89,
        1,0,0,0,91,92,1,0,0,0,92,90,1,0,0,0,92,93,1,0,0,0,93,94,1,0,0,0,
        94,95,6,14,0,0,95,30,1,0,0,0,5,0,72,78,84,92,1,6,0,0
    ]

class SQL_SUBSETLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    SELECT = 9
    FROM = 10
    WHERE = 11
    IDENTIFIER = 12
    NUMBER = 13
    STRING = 14
    WS = 15

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'*'", "','", "'='", "'>'", "'<'", "'>='", "'<='", "'<>'", "'SELECT'", 
            "'FROM'", "'WHERE'" ]

    symbolicNames = [ "<INVALID>",
            "SELECT", "FROM", "WHERE", "IDENTIFIER", "NUMBER", "STRING", 
            "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "SELECT", "FROM", "WHERE", "IDENTIFIER", "NUMBER", 
                  "STRING", "WS" ]

    grammarFileName = "SQL_SUBSET.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


